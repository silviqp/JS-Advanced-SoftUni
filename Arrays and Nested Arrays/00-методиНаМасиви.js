// PUSH - добавяме елементи в края на масива 
// FOR - обхождаме масива и можем да достъпим и индекса и елемнта на индекса което значи че можем да манипулираме масиваю
// FOR- OF - обхождаме само елементите , Не можем да манипулираме масива;
// POP - прамахва последния елемент в масива и връща стойността ,Променя масива;
// PUSH - добавяме елемент в края на масива;
// SHIFT - премахва елемент в началото на масива;
// UNSHIFT - добавя елемент в началото на масива;
// SPLICE - позволява да премахваме и/или добавяме 
// FILL - използваме ако искаме да напълним масива с еднаква стойност;
// - първия параметър е елемента с който искаме да попълним ;
// - вторият параметър е начален индекс;
// - третия параметър е краен индекс;
let arr = [1,2,3,4];
arr.fill(8,2,4)
console.log(arr);    // връща 1,2,0,0;
console.log('-----------');
// REVERSE - обръща масива ;
console.log(arr.reverse());
console.log('-----------');
// SORT - сортираме числа и ако искаме да сортираме стринг по азбучен ред използване localeCompare
console.log(arr.sort((a,b)=>a-b));
console.log('-----------');
// JOIN - можем да ги съединим само по , или пайп;
console.log(arr.join('|'));
console.log('-----------');
// CONCAT - можем да изредим няколко масива и да ги конкатенираме в един ;
let arr2 = [3,5,6];
let arr3 = [7,6,9];
const myArr = arr.concat(arr2,arr3);
console.log(myArr);
console.log('-----------');
// SLICE - има два параметъра начален и краен индекс като началния е включително а крайния не го взима;
// оригиналния масив не се променя;
// ако подадем отрицателен индекс ги чете отзад напред;
console.log(arr.slice(0,-2));
console.log('-----------');
// INCLUDES - връща true или false.Ако искаме да търсим в целия масив подаваме само един параметър 
// но можем да подадем и краен параметър. Дава ни само дали елемента го има в масива, но не и къде 
// се намира;

// INDEXOF - ако искаме да разберем на кой индекс се намира даден елемент,ако елемента го има в масива
// ни връща на кой индекс е, ако го няма ни връща -1;
console.log(arr.indexOf(1))
console.log('-----------');
//         ИТЕРИРАНЕ
// FOREACH - метод който минава през всички елементи на масива и изпълнява определена функция върху тях
// - не връща нищо и ако го съхраним в променлива ще върне undefined ;
// - с един параметър- изрежда всички елемнти на масива
arr.forEach((c)=> console.log(c))
console.log('-----------');
// - с два параметъра изрежда индекса и елемента;
arr.forEach((c,i)=> console.log(i,c));
console.log('-----------');
// - с три параметъра - индекса, елемента и масива от който сме тръгнали
arr.forEach((c,i,arr)=> console.log(i,c,arr))
console.log('-----------');

// MAP - връща нов модифициран масив;
let result = arr.map(e=>e+1);
console.log(result)
console.log('-----------')

// SOME - проверява дали поне един от елементите на масива отговаря на даден предикат (функция, която връща тру или фолсе);
console.log(arr.some(e => e % 2 === 0));
console.log('-----------');

// FIND - връща ни стойността от масива която изпълнява даден предикат, но САМО първата ;
console.log(arr.find(e => e % 2 === 0));
console.log('-----------');

// FINDINDEX - връща индекса на първия елемент отговарящ на предиката ;
console.log(arr.findIndex(e => e % 2 === 0));
console.log('-----------');

// EVERY - проверява дали всеки един елемент в масива отговаря на даден предикат ;
console.log(arr.every(e => e % 2 === 0));
console.log('-----------');

// REDUCE - 

